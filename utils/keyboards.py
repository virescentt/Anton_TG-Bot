import json
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext

from data.chat_storage_json import load_chats

def cities_keyboard():
    cities_kb = InlineKeyboardBuilder()
        
    with open('data/cities.json', 'r', encoding='utf-8') as f:
        cities = json.load(f)
    
    for city, city_data in cities.items():
        cities_kb.button(
            text=city_data["name"],
            callback_data=f"city_{city}")
    
    cities_kb.adjust(1,1) # –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞ —Ä—è–¥. –ò —Ç–∞–∫ –ø–æ –¥–µ—Ñ–æ–ª—Ç—É
    return cities_kb.as_markup()


def cities_groups_keyboard(groups_data, city, back_cb="start"):
    group_kb = InlineKeyboardBuilder()

    for i, group_data in enumerate(groups_data, start=1):
        group_name = group_data.get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏")
        group_kb.button(
            text=f"{i}. {group_name}",
            callback_data=f"prices_{city}")
   
    # group_kb.button(
    #     text="üí∞ –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã",
    #     callback_data=f"prices_{city}")
    
    # group_kb.button(
    #     text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
    #     callback_data=f"contact_manager")

    group_kb.button(
        text="‚¨Ö –ù–∞–∑–∞–¥",
        callback_data=back_cb)
    
    group_kb.adjust(1)
    return group_kb.as_markup()
    

# def pricing_keyboard(city, back_cb="start"):
#     pricing_kb = InlineKeyboardBuilder()
#     pricing_kb.button(
#         text="üí∞ –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã",
#         callback_data=f"prices_{city}")
#     pricing_kb.button(
#         text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
#         callback_data=f"contact_manager")
#     pricing_kb.button(
#         text="üîô",
#         callback_data=back_cb)
#     pricing_kb.adjust(2)
#     return pricing_kb.as_markup()
    


def contact_manager_keyboard(city="tri_city"):
    contact_manager_kb = InlineKeyboardBuilder()
    
    contact_manager_kb.button(
        text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
        callback_data="contact_manager")
    contact_manager_kb.button(
        text="‚¨Ö –ù–∞–∑–∞–¥",
        callback_data=f"city_{city}")
    contact_manager_kb.adjust(1)
    return contact_manager_kb.as_markup()
    

def cancel_contact_manager_keyboard():
    ccm_kb = InlineKeyboardBuilder()
    ccm_kb.button(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="cancel_contact_manager")
    return ccm_kb.as_markup()
    





# --- –ê–¥–º–∏–Ω–∫–∞ ---
# –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
# –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
# –û–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã
def admin_panel_keyboard():
    kb = InlineKeyboardBuilder()

    kb = InlineKeyboardBuilder()
    kb.button(text="üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="admin_active_chats")
    kb.button(text="üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ", callback_data="admin_inactive_chats")
    kb.button(text="‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã", callback_data="admin_waiting_requests")
    kb.button(text="üëÄ –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="admin_my_status")
    kb.adjust(2)
    return kb.as_markup()


# --- –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö/–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ ---
# –ö–Ω–æ–ø–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# ...
# –ê–¥–º–∏–Ω–∫–∞
def InActive_chats_list_keyboard(users_list):
    kb = InlineKeyboardBuilder()
    for i, (uid, data) in enumerate(users_list, start=1):
        kb.button(text=f"{i}. {data['first_name']}", callback_data=f"view_chat_{uid}")
    kb.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="admin")
    kb.adjust(3, 1)
    return kb.as_markup()



def back_to_admin_keyboard():
    kb = InlineKeyboardBuilder()
    kb.button(text="–ê–¥–º–∏–Ω–∫–∞", callback_data="admin")
    return kb.as_markup()



def InActive_chat_control_keyboard(is_active, uid, confirm_cb_name="confirm_delete_user"):
    if is_active:
        return active_chat_control_keyboard(uid)
    else:
        return inactive_chat_control_keyboard(uid, confirm_cb_name)

# --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã–º —á–∞—Ç–æ–º ---
# –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
# –£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
# –ù–∞–ø–∏—Å–∞—Ç—å
# –ù–∞–∑–∞–¥ (–∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤)
def active_chat_control_keyboard(uid):
    kb = InlineKeyboardBuilder()

    chats = load_chats()
    manager_status = chats[uid]["manager"]["status"]
    if manager_status == "active":
        kb.button(text="üî¥üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç", callback_data=f"end_chat_{uid}")
        kb.button(text="üö™ –í—ã–π—Ç–∏ –∏–∑ –æ–Ω–ª–∞–π–Ω", callback_data=f"leave_chat_{uid}")
        kb.button(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data=f"confirm_clear_chat_history_{uid}")
        kb.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="admin_active_chats")
        kb.adjust(2, 1)
        return kb.as_markup()
    
    else:
        kb.button(text="üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç", callback_data=f"end_chat_{uid}")
        kb.button(text="üì§ –ù–∞–ø–∏—Å–∞—Ç—å", callback_data=f"manager_activate_chat_{uid}")
        kb.button(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data=f"confirm_clear_chat_history_{uid}")
        kb.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="admin_active_chats")
        kb.adjust(2, 1)
        return kb.as_markup()




# --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º —á–∞—Ç–æ–º ---
# –ù–∞—á–∞—Ç—å —á–∞—Ç (–¥–ª—è –æ–±–æ–∏—Ö)
# –£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
# –£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é
# –ù–∞–∑–∞–¥ (–∫ —Å–ø–∏—Å–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤)
def inactive_chat_control_keyboard(uid, confirm_cb_name="confirm_delete_user"):
    kb = InlineKeyboardBuilder()
    kb.button(text="üü¢üü¢ –ù–∞—á–∞—Ç—å —á–∞—Ç", callback_data=f"start_chat_{uid}")
    kb.button(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data=f"confirm_clear_chat_history_{uid}")
    kb.button(text="üöØ –£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã", callback_data=f"{confirm_cb_name}_{uid}")
    kb.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"admin_inactive_chats")
    kb.adjust(2, 1)
    return kb.as_markup()


# --- –ù–∞—á–∞—Ç—ã–π —á–∞—Ç/–Ω–∞–ø–∏—Å–∞—Ç—å –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ---
def manager_online_keyboard(uid):
    kb = InlineKeyboardBuilder()
    kb.button(text="üî¥üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç", callback_data=f"end_chat_{uid}")
    kb.button(text="üö™ –í—ã–π—Ç–∏ –∏–∑ –æ–Ω–ª–∞–π–Ω", callback_data=f"leave_chat_{uid}")
    kb.adjust(2)
    return kb.as_markup()


def manager_request_keyboard(uid):
    kb = InlineKeyboardBuilder()

    btn1 = InlineKeyboardButton(
        text="üü¢üü¢ –ù–∞—á–∞—Ç—å —á–∞—Ç",
        callback_data=f"start_chat_{uid}"
        )
    btn2 = InlineKeyboardButton(
        text="–ê–¥–º–∏–Ω–∫–∞",
        callback_data="admin"
        )
  
    kb.add(
        btn1,
        btn2
    )

    return kb.as_markup()


# --- –û–∂–∏–¥–∞—é—â–∏–π –∑–∞–ø—Ä–æ—Å ---
def waiting_request_keyboard(uid):
    kb = InlineKeyboardBuilder()
    kb.button(text="üü¢üü¢ –ù–∞—á–∞—Ç—å —á–∞—Ç", callback_data=f"start_chat_{uid}")
    kb.button(text="üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å", callback_data=f"confirm_delete_request_{uid}")
    kb.button(text="–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞", callback_data=f"history_request_{uid}")
    kb.adjust(2)
    return kb.as_markup()


def back_keyboard(text: str, cb_data: str):
    kb = InlineKeyboardBuilder()

    btn1 = InlineKeyboardButton(
        text=text,
        callback_data=cb_data
        )
    kb.add(
        btn1
    )

    return kb.as_markup()


# --- –ù–∞—á–∞—Ç—ã–π —á–∞—Ç/–Ω–∞–ø–∏—Å–∞—Ç—å –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ---
def new_message_keyboard(uid):
    kb = InlineKeyboardBuilder()
    kb.button(text="–ù–∞–ø–∏—Å–∞—Ç—å", callback_data=f"manager_activate_chat_{uid}")
    kb.button(text="–ò–Ω—Ñ–∞ –æ —á–∞—Ç–µ", callback_data=f"view_chat_{uid}")
    kb.adjust(2)
    return kb.as_markup()

# --- –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ ---
def confirm_keyboard(confirm_cb_name, uid):
    kb = InlineKeyboardBuilder()
    kb.button(text="‚úÖ –î–∞", callback_data=f"{confirm_cb_name}_{uid}")
    kb.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_confirm")
    kb.adjust(2)
    return kb.as_markup()




